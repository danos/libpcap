Support for GNU/kFreeBSD, by Aurelien Jarno and others.

--- a/configure.in
+++ b/configure.in
@@ -108,6 +108,7 @@
 AC_CHECK_HEADERS(linux/types.h)
 AC_CHECK_HEADERS(linux/if_packet.h netpacket/packet.h netpacket/if_packet.h)
 AC_CHECK_HEADERS(net/pfvar.h, , , [#include <sys/types.h>
+#include <net/if_pflog.h>
 #include <sys/socket.h>
 #include <net/if.h>])
 if test "$ac_cv_header_net_pfvar_h" = yes; then
@@ -308,7 +309,7 @@
 	#
 	V_PCAP=bpf
 	AC_DEFINE(HAVE_CLONING_BPF,1,[define if you have a cloning BPF device])
-elif test -r /dev/bpf0 ; then
+elif test -r /dev/bpf0 || test -r /usr/include/net/bpf.h ; then
 	V_PCAP=bpf
 elif test -r /usr/include/net/pfilt.h ; then
 	V_PCAP=pf
@@ -523,20 +524,6 @@
 	#
 	AC_CHECK_HEADERS(net/if_media.h)
 
-	AC_MSG_CHECKING(whether the system supports zerocopy BPF)
-	AC_TRY_COMPILE(
-	    [#include <sys/socket.h>
-	    #include <sys/ioctl.h>
-	    #include <net/if.h>
-	    #include <net/bpf.h>],
-	    [return (BIOCROTZBUF + BPF_BUFMODE_ZBUF);],
-	    [  
-		AC_MSG_RESULT(yes)
-		AC_DEFINE(HAVE_ZEROCOPY_BPF, 1,
-		[define if the system supports zerocopy BPF])
-	    ],
-	    AC_MSG_RESULT(no))
-
 	    #
 	    # Check whether we have struct BPF_TIMEVAL.
 	    #
@@ -549,6 +536,7 @@
 #endif
 #include <net/bpf.h>
 		    ])
+	    LIBS="$LIBS -lrt"
 	;;
 
 hurd)
